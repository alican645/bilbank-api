#!/usr/bin/env node
var app = require('../app');
var debug = require('debug')('bilbank-api:server');
var http = require('http');
const DB = require('../db/Database');
const { CONNECTION_STRING } = require('../config');

const { attachSocketServer } = require('../sockets'); // ðŸ”¹ EKLENDÄ°

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = http.createServer(app);

// ðŸ”¹ Socket.IO & quiz namespace baÄŸla
attachSocketServer(server, app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var p = parseInt(val, 10);
  if (isNaN(p)) return val;
  if (p >= 0) return p;
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES': console.error(bind + ' requires elevated privileges'); process.exit(1);
    case 'EADDRINUSE': console.error(bind + ' is already in use'); process.exit(1);
    default: throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
  new DB().connect({ CONNECTION_STRING });
}
